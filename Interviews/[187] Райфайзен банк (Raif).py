# 3
# Нам дан массив 1, состоящий из целых чисел.
# Нужно написать функцию, которая возвращает 2 максимума
# (2 самых больших по значению числа в массиве).
# Если в массиве максимум повторяется
# (например, 1 = [7, 7, 4]) - выводить 2 раза одно и то же число (7ку).

l = [1,5,6,4,6,3,2,5,7,4,2,5,4,7,7,7,7,7,7]

def two_max(l: list):
    m1 = max(l)
    i = l.index(m1)
    l.pop(i)
    m2 = max(l)
    return m1, m2

#or
def two_max2(l: list):
    m1 = max(l)
    l_copy = l.copy()
    l_copy.remove(m1)
    m2 = max(l_copy)
    return m1, m2

#or
def two_max3(l: list):
    sorted_l = sorted(l, reverse=True)
    return sorted_l[0], sorted_l[1]


print(two_max(l))
print(two_max2(l))
print(two_max3(l))




# Изменяемые и неизменяемые
# У изменяемых типов данных (при их изменении) адрес в памяти,
# по которому находится эта переменная, не изменяется. Изменяется только содержимое.
# Изменяемые: list, dict, set, bytearray
# У неизменяемых типов данных (при совершении над ними каких-то действий)
# создается новая ячейка в памяти с другим адресом и новым содержимым.
# Т.е «старое» содержимое будет по старому адресу.
# Неизменяемые: int, float, str, tuple, frozenset, bytes



# Словарь - что это такое?
# Словарь - изменяемый тип данных, инфо хранится в виде
# пары: ключ - значение. Ключи должны быть уникальными и
# неизменяемыми объектами. Значения могут быть любыми объектами.


# Как в текстовом файле подсчитать кол-во вхождений уникальных слов?
# 1. Прочитать текст из файла.
# 2. Заменить все на нижний регистр, убрать пунктуацию.
# 3. Разбить его на слова.
# 4. Посчитать, сколько раз встречается каждое уникальное слово.

import string

with open("Test_file.txt", 'r') as f:
    text = f.read()

text = text.lower().translate(str.maketrans('', '', string.punctuation))
text = text.split()
text.count('word')



 # Как определить, что все символы в строке уникальны?
# 1. использовать метод unique из библиотеки numpy
# 2. перевести в набор set() и сравнить кол-во элементов в получившемся наборе и в изначальной строке
# 3. Создать пустой список. Пройтись поэлементно по строке в цикле fot и каждый новый элемент закидывать в список.
# Если на какой-то итерации элемент строки уже есть в созданном списке, то можно прекратить перебор.
# 4. В библиотеке toolz функция unique()
# 5. перевести в  список, затем в словарь dict.fromkeys() и обратно. Потом сравнить кол-во элементов у
# получившегося списка и изначальной строки.